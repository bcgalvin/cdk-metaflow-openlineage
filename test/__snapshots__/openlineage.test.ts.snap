// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot Should match snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestdmsreplicatorDmsInstance8614E0D6": {
      "Properties": {
        "AllocatedStorage": 10,
        "AllowMajorVersionUpgrade": false,
        "AutoMinorVersionUpgrade": false,
        "MultiAZ": false,
        "PubliclyAccessible": false,
        "ReplicationInstanceClass": "dms.r5.large",
        "ReplicationSubnetGroupIdentifier": {
          "Ref": "metaflowopenlineagesnapshottestdmsreplicatordmssubnetgroup2040688D",
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestdmsreplicatordmssg2B8FBD94",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::DMS::ReplicationInstance",
    },
    "metaflowopenlineagesnapshottestdmsreplicatorKinesisReplicationTask07967209": {
      "Properties": {
        "MigrationType": "full-load-and-cdc",
        "ReplicationInstanceArn": {
          "Ref": "metaflowopenlineagesnapshottestdmsreplicatorDmsInstance8614E0D6",
        },
        "ReplicationTaskSettings": "{"TargetMetadata":{"TargetSchema":"","SupportLobs":true,"FullLobMode":false,"LobChunkSize":0,"LimitedSizeLobMode":true,"LobMaxSize":32,"InlineLobMaxSize":0,"LoadMaxFileSize":0,"ParallelLoadThreads":0,"ParallelLoadBufferSize":0,"BatchApplyEnabled":false,"TaskRecoveryTableEnabled":false,"ParallelLoadQueuesPerThread":0,"ParallelApplyThreads":0,"ParallelApplyBufferSize":0,"ParallelApplyQueuesPerThread":0},"FullLoadSettings":{"TargetTablePrepMode":"DO_NOTHING","CreatePkAfterFullLoad":false,"StopTaskCachedChangesApplied":false,"StopTaskCachedChangesNotApplied":false,"MaxFullLoadSubTasks":8,"TransactionConsistencyTimeout":600,"CommitRate":10000},"Logging":{"EnableLogging":true,"LogComponents":[{"Id":"DATA_STRUCTURE","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"COMMUNICATION","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"IO","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"COMMON","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"FILE_FACTORY","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"FILE_TRANSFER","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"REST_SERVER","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"ADDONS","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"TARGET_LOAD","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"TARGET_APPLY","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"SOURCE_UNLOAD","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"SOURCE_CAPTURE","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"TRANSFORMATION","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"SORTER","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"TASK_MANAGER","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"TABLES_MANAGER","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"METADATA_MANAGER","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"PERFORMANCE","Severity":"LOGGER_SEVERITY_DEFAULT"},{"Id":"VALIDATOR_EXT","Severity":"LOGGER_SEVERITY_DEFAULT"}]},"ControlTablesSettings":{"historyTimeslotInMinutes":5,"ControlSchema":"","HistoryTimeslotInMinutes":5,"HistoryTableEnabled":false,"SuspendedTablesTableEnabled":false,"StatusTableEnabled":false},"StreamBufferSettings":{"StreamBufferCount":3,"StreamBufferSizeInMB":8,"CtrlStreamBufferSizeInMB":5},"ChangeProcessingDdlHandlingPolicy":{"HandleSourceTableDropped":true,"HandleSourceTableTruncated":true,"HandleSourceTableAltered":true},"ErrorBehavior":{"DataErrorPolicy":"LOG_ERROR","DataTruncationErrorPolicy":"LOG_ERROR","DataErrorEscalationPolicy":"SUSPEND_TABLE","DataErrorEscalationCount":0,"TableErrorPolicy":"SUSPEND_TABLE","TableErrorEscalationPolicy":"STOP_TASK","TableErrorEscalationCount":0,"RecoverableErrorCount":-1,"RecoverableErrorInterval":5,"RecoverableErrorThrottling":true,"RecoverableErrorThrottlingMax":1800,"ApplyErrorDeletePolicy":"IGNORE_RECORD","ApplyErrorInsertPolicy":"LOG_ERROR","ApplyErrorUpdatePolicy":"LOG_ERROR","ApplyErrorEscalationPolicy":"LOG_ERROR","ApplyErrorEscalationCount":0,"ApplyErrorFailOnTruncationDdl":false,"FullLoadIgnoreConflicts":true,"FailOnTransactionConsistencyBreached":false,"FailOnNoTablesCaptured":false},"ChangeProcessingTuning":{"BatchApplyPreserveTransaction":true,"BatchApplyTimeoutMin":1,"BatchApplyTimeoutMax":30,"BatchApplyMemoryLimit":500,"BatchSplitSize":0,"MinTransactionSize":1000,"CommitTimeout":1,"MemoryLimitTotal":1024,"MemoryKeepTime":60,"StatementCacheSize":50}}",
        "SourceEndpointArn": {
          "Ref": "metaflowopenlineagesnapshottestdmsreplicatorSourceD4AF5F37",
        },
        "TableMappings": "{"rules":[{"rule-type":"selection","rule-id":"1","rule-name":"1","object-locator":{"schema-name":"public","table-name":"%"},"rule-action":"include","filters":[]}]}",
        "TargetEndpointArn": {
          "Ref": "metaflowopenlineagesnapshottestdmsreplicatordmstarget6074BCFE",
        },
      },
      "Type": "AWS::DMS::ReplicationTask",
    },
    "metaflowopenlineagesnapshottestdmsreplicatorSourceD4AF5F37": {
      "Properties": {
        "DatabaseName": "metaflow",
        "EndpointType": "source",
        "EngineName": "postgres",
        "Password": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-1:123456789012:secret:test-secret:SecretString:password::}}",
        "Port": 5432,
        "PostgreSqlSettings": {
          "SecretsManagerAccessRoleArn": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestdmsreplicatordmssecretrole699408F4",
              "Arn",
            ],
          },
          "SecretsManagerSecretId": "test",
        },
        "ServerName": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Address",
          ],
        },
        "Username": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-1:123456789012:secret:test-secret:SecretString:username::}}",
      },
      "Type": "AWS::DMS::Endpoint",
    },
    "metaflowopenlineagesnapshottestdmsreplicatordmsrole96DDFCD4": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "It's ok for us to use managed policies",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole",
        ],
        "RoleName": "dms-vpc-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestdmsreplicatordmssecretrole699408F4": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestdmsreplicatordmssecretroleDefaultPolicyA60A4050": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:secretsmanager:us-east-1:123456789012:secret:test-secret",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowopenlineagesnapshottestdmsreplicatordmssecretroleDefaultPolicyA60A4050",
        "Roles": [
          {
            "Ref": "metaflowopenlineagesnapshottestdmsreplicatordmssecretrole699408F4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowopenlineagesnapshottestdmsreplicatordmssg2B8FBD94": {
      "Properties": {
        "GroupDescription": "Default/metaflow-openlineage-snapshot-test/dms-replicator/dms-sg",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "metaflowopenlineagesnapshottestdmsreplicatordmssubnetgroup2040688D": {
      "DependsOn": [
        "metaflowopenlineagesnapshottestdmsreplicatordmsrole96DDFCD4",
      ],
      "Properties": {
        "ReplicationSubnetGroupDescription": "Replication Subnet group",
        "SubnetIds": [
          "p-12345",
          "p-67890",
        ],
      },
      "Type": "AWS::DMS::ReplicationSubnetGroup",
    },
    "metaflowopenlineagesnapshottestdmsreplicatordmstarget6074BCFE": {
      "Properties": {
        "EndpointType": "target",
        "EngineName": "kinesis",
        "KinesisSettings": {
          "MessageFormat": "JSON",
          "ServiceAccessRoleArn": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestdmsreplicatorwriterRoleA5DCEF70",
              "Arn",
            ],
          },
          "StreamArn": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestkinesispipelinetargetstream149689AD",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::DMS::Endpoint",
    },
    "metaflowopenlineagesnapshottestdmsreplicatortargetRole4E06D241": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This is coming from the grant() methods on the s3 bucket construct, which is least-priv enough for me",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestdmsreplicatortargetRoleDefaultPolicyE48668C6": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This is coming from the grant() methods on the s3 bucket construct, which is least-priv enough for me",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowopenlineagesnapshottestdmsreplicatortargetRoleDefaultPolicyE48668C6",
        "Roles": [
          {
            "Ref": "metaflowopenlineagesnapshottestdmsreplicatortargetRole4E06D241",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowopenlineagesnapshottestdmsreplicatorwriterRoleA5DCEF70": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestdmsreplicatorwriterRoleDefaultPolicy7582E3EB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "metaflowopenlineagesnapshottestkinesispipelinetargetstream149689AD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowopenlineagesnapshottestdmsreplicatorwriterRoleDefaultPolicy7582E3EB",
        "Roles": [
          {
            "Ref": "metaflowopenlineagesnapshottestdmsreplicatorwriterRoleA5DCEF70",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowopenlineagesnapshottestkinesispipelinedeliverystream673EDE51": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-KDF1",
              "reason": "If kmsEncryptionConfig isn't specified it will use the aws managed key and not no encryption",
            },
          ],
        },
      },
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 128,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "metaflowopenlineagesnapshottestkinesispipelinefirehoselgE0C4F371",
            },
            "LogStreamName": {
              "Ref": "metaflowopenlineagesnapshottestkinesispipelinefirehosels0E07643E",
            },
          },
          "CompressionFormat": "UNCOMPRESSED",
          "ErrorOutputPrefix": "error/",
          "Prefix": "processed/",
          "RoleARN": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestkinesispipelinefirehosewriter3DA679BE",
              "Arn",
            ],
          },
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestkinesispipelinetargetstream149689AD",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestkinesispipelinefirehosereader15CC90A5",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "metaflowopenlineagesnapshottestkinesispipelinefirehoselgE0C4F371": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowopenlineagesnapshottestkinesispipelinefirehosels0E07643E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Ref": "metaflowopenlineagesnapshottestkinesispipelinefirehoselgE0C4F371",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowopenlineagesnapshottestkinesispipelinefirehosereader15CC90A5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestkinesispipelinefirehosereaderDefaultPolicy72626C76": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "metaflowopenlineagesnapshottestkinesispipelinetargetstream149689AD",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowopenlineagesnapshottestkinesispipelinefirehosereaderDefaultPolicy72626C76",
        "Roles": [
          {
            "Ref": "metaflowopenlineagesnapshottestkinesispipelinefirehosereader15CC90A5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowopenlineagesnapshottestkinesispipelinefirehosewriter3DA679BE": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This is coming from the grant() methods on the s3 bucket construct, which is least-priv enough for me",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "metaflowopenlineagesnapshottestkinesispipelinefirehosewriterDefaultPolicyD95643A0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "This is coming from the grant() methods on the s3 bucket construct, which is least-priv enough for me",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "metaflowopenlineagesnapshottestkinesispipelinefirehosewriterDefaultPolicyD95643A0",
        "Roles": [
          {
            "Ref": "metaflowopenlineagesnapshottestkinesispipelinefirehosewriter3DA679BE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-S1",
              "reason": "This is a proof-of-concept so do not need access logs on this bucket.",
            },
          ],
        },
      },
      "Properties": {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "ObjectWriter",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowopenlineagesnapshottestkinesispipelinesecurebucketAutoDeleteObjectsCustomResource913A2C3E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "metaflowopenlineagesnapshottestkinesispipelinesecurebucketPolicy10F72994",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "metaflowopenlineagesnapshottestkinesispipelinesecurebucketPolicy10F72994": {
      "Properties": {
        "Bucket": {
          "Ref": "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "metaflowopenlineagesnapshottestkinesispipelinesecurebucket62E3AB6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "metaflowopenlineagesnapshottestkinesispipelinetargetstream149689AD": {
      "Properties": {
        "RetentionPeriodHours": 720,
        "StreamEncryption": {
          "EncryptionType": "KMS",
          "KeyId": "alias/aws/kinesis",
        },
        "StreamModeDetails": {
          "StreamMode": "ON_DEMAND",
        },
      },
      "Type": "AWS::Kinesis::Stream",
    },
    "metaflowopenlineagesnapshottestreadreplicadatabasesecretAttachment434D0A48": {
      "Properties": {
        "SecretId": "arn:aws:secretsmanager:us-east-1:123456789012:secret:test-secret",
        "TargetId": {
          "Ref": "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
        },
        "TargetType": "AWS::RDS::DBInstance",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE": {
      "DeletionPolicy": "Snapshot",
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-RDS11",
              "reason": "Replica uses default port",
            },
            {
              "id": "AwsSolutions-RDS10",
              "reason": "Replica doesn't have deletion protection turned on",
            },
            {
              "id": "AwsSolutions-RDS3",
              "reason": "Replica is single AZ",
            },
            {
              "id": "AwsSolutions-RDS2",
              "reason": "Replica not encrypted",
            },
          ],
        },
      },
      "Properties": {
        "CopyTagsToSnapshot": true,
        "DBInstanceClass": "db.t3.small",
        "DBParameterGroupName": {
          "Ref": "metaflowopenlineagesnapshottestreadreplicareadreplicaparamgroup9ADB4391",
        },
        "DBSubnetGroupName": {
          "Ref": "metaflowopenlineagesnapshottestreadreplicareadreplicainstanceSubnetGroup13A7E673",
        },
        "MultiAZ": false,
        "PubliclyAccessible": false,
        "SourceDBInstanceIdentifier": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":rds:us-east-1:123456789012:db:test-mf",
            ],
          ],
        },
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Snapshot",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicainstanceSubnetGroup13A7E673": {
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for read-replica-instance database",
        "SubnetIds": [
          "p-12345",
          "p-67890",
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicaparamgroup9ADB4391": {
      "Properties": {
        "Description": "Parameter group for postgres14",
        "Family": "postgres14",
        "Parameters": {
          "rds.logical_replication": "1",
          "wal_sender_timeout": "0",
        },
      },
      "Type": "AWS::RDS::DBParameterGroup",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF": {
      "Properties": {
        "GroupDescription": "Default/metaflow-openlineage-snapshot-test/SG",
        "SecurityGroupIngress": [
          {
            "CidrIp": "1.2.3.4/5",
            "Description": "Traffic from private subnets",
            "FromPort": 5432,
            "IpProtocol": "tcp",
            "ToPort": 5432,
          },
        ],
        "VpcId": "vpc-12345",
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicasgfrommetaflowopenlineagesnapshottestdmsreplicatordmssg9961E33AIndirectPort30485848": {
      "Properties": {
        "Description": "from metaflowopenlineagesnapshottestdmsreplicatordmssg9961E33A:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestdmsreplicatordmssg2B8FBD94",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicasgfrommetaflowopenlineagesnapshottestreadreplicareadreplicasg5DB8AB6A443406DEFB7": {
      "Properties": {
        "Description": "Traffic within this SecurityGroup",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicasgfrommetaflowopenlineagesnapshottestreadreplicareadreplicasg5DB8AB6AIndirectPort38FFA831": {
      "Properties": {
        "Description": "from metaflowopenlineagesnapshottestreadreplicareadreplicasg5DB8AB6A:{IndirectPort}",
        "FromPort": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "ToPort": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicasgtometaflowopenlineagesnapshottestreadreplicareadreplicasg5DB8AB6A443729FEF97": {
      "Properties": {
        "Description": "Traffic within this SecurityGroup",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "metaflowopenlineagesnapshottestreadreplicareadreplicasgtometaflowopenlineagesnapshottestreadreplicareadreplicasg5DB8AB6AIndirectPort80790687": {
      "Properties": {
        "Description": "to metaflowopenlineagesnapshottestreadreplicareadreplicasg5DB8AB6A:{IndirectPort}",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "FromPort": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Port",
          ],
        },
        "GroupId": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicasgD54235CF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": {
          "Fn::GetAtt": [
            "metaflowopenlineagesnapshottestreadreplicareadreplicainstance721D98EE",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
